
#include "ZQ_CNN_CompileConfig.h"
#include "ZQlib/ZQ_MathBase.h"
#include "layers_c/zq_cnn_depthwise_convolution_32f_align_c.h"
#include <stdio.h>
#include <malloc.h>
#include <string.h>
#include <time.h>
#include <omp.h>

#if !__ARM_NEON

#if defined(_WIN32)
#include <intrin.h>//(include immintrin.h)
#if ZQ_CNN_USE_SSETYPE >= ZQ_CNN_SSETYPE_SSE
#include <mmintrin.h> //MMX  
#include <xmmintrin.h> //SSE(include mmintrin.h)  
#include <emmintrin.h> //SSE2(include xmmintrin.h)  
#include <pmmintrin.h> //SSE3(include emmintrin.h)  
#include <tmmintrin.h>//SSSE3(include pmmintrin.h)  
#include <smmintrin.h>//SSE4.1(include tmmintrin.h)  
#include <nmmintrin.h>//SSE4.2(include smmintrin.h)  
#endif 
#if ZQ_CNN_USE_SSETYPE >= ZQ_CNN_SSETYPE_AVX
#include <wmmintrin.h>//AES(include nmmintrin.h)  
#include <immintrin.h>//AVX(include wmmintrin.h)  
#include <intrin.h>//(include immintrin.h)  
#endif
#else
#include <x86intrin.h>
#endif

#if ZQ_CNN_USE_SSETYPE >= ZQ_CNN_SSETYPE_AVX2
#define zq_mm_fmadd_ps _mm256_fmadd_ps
#elif ZQ_CNN_USE_SSETYPE >= ZQ_CNN_SSETYPE_AVX
#define zq_mm_fmadd_ps(A,B,C) _mm256_add_ps(_mm256_mul_ps(A,B),C)
#else
#define zq_mm_fmadd_ps(A,B,C) _mm_add_ps(_mm_mul_ps(A,B),C)
#endif
#if ZQ_CNN_USE_SSETYPE >= ZQ_CNN_SSETYPE_AVX
#define final_sum(q) (q[0]+q[1]+q[2]+q[3]+q[4]+q[5]+q[6]+q[7])
#define zq_mm_set1_ps _mm256_set1_ps
#define zq_mm_setzero_ps _mm256_setzero_ps
#define zq_mm_add_ps _mm256_add_ps
#define zq_mm_sub_ps _mm256_sub_ps
#define zq_mm_mul_ps _mm256_mul_ps
#define zq_mm_store_ps _mm256_store_ps
#define zq_mm_load_ps _mm256_load_ps
#define zq_mm_type __m256
#define num_per_op 8
#define num_per_op2 16
#define num_per_op3 24
#define num_per_op4 32
#define num_per_op6 48
#else
#define final_sum(q) (q[0]+q[1]+q[2]+q[3])
#define zq_mm_set1_ps _mm_set1_ps
#define zq_mm_setzero_ps _mm_setzero_ps
#define zq_mm_add_ps _mm_add_ps
#define zq_mm_sub_ps _mm_sub_ps
#define zq_mm_mul_ps _mm_mul_ps
#define zq_mm_store_ps _mm_store_ps
#define zq_mm_load_ps _mm_load_ps
#define zq_mm_type __m128
#define num_per_op 4
#define num_per_op2 8
#define num_per_op3 12
#define num_per_op4 16
#define num_per_op6 24
#endif

#else
#include <arm_neon.h>
#define final_sum(q) (q[0]+q[1]+q[2]+q[3])
#define zq_mm_store_ps vst1q_f32
#define zq_mm_load_ps vld1q_f32
#define zq_mm_add_ps vaddq_f32
#define zq_mm_sub_ps vsubq_f32
#if ZQ_CNN_USE_FMADD128
#define zq_mm_fmadd_ps(A, B, C) vfmaq_f32(C, A, B)
#else
#define zq_mm_fmadd_ps(A, B, C) vaddq_f32(vmulq_f32(A, B), C)
#endif
#define zq_mm_mul_ps vmulq_f32
#define zq_mm_setzero_ps() vdupq_n_f32(0)
#define zq_mm_set1_ps vdupq_n_f32
#define zq_mm_type float32x4_t
#define num_per_op 4
#define num_per_op2 8
#define num_per_op3 12
#define num_per_op4 16
#define num_per_op6 24
#endif

/*C % num_per_op == 0,
filter is 3x3*C,
trans_filter is 4*4*C
*/
void transform_filter_F2233(const float* filter, int C, float* trans_filter);

void wino_F2233(const float* in_data, int in_H, int in_W, int in_C, const float* trans_filter,
	float* out_data, int out_H, int out_W, int out_C);

bool check_value(int M, int N, const float* C1, int ldc1, const float* C2, int ldc2, float thresh = 1e-5, bool show = false);

void test(int C, int H, int W, int nIters);

int main()
{
	/*test(8, 4, 4, 1);
	return 0;*/
	test(8, 240, 320, 10000);
	test(8, 240, 320, 10000);
	test(8, 240, 320, 10000);
	test(16, 240, 320, 5000);
	test(24, 240, 320, 4000);
	test(32, 240, 320, 2000);
	test(64, 240, 320, 1000);
	test(128, 240, 320, 500);
	test(256, 240, 320, 200);
	test(512, 240, 320, 100);
	return 0;
}

void test(int C, int H, int W, int nIters)
{
	int in_H = H;
	int in_W = W;
	int out_H = in_H - 2;
	int out_W = in_W - 2;
	int in_pixStep = C;
	int in_widthStep = C*in_W;
	int in_sliceStep = in_H*in_widthStep;
	int filter_pixStep = C;
	int filter_widthStep = C * 3;
	int filter_sliceStep = C * 9;
	int out_pixStep = C;
	int out_widthStep = C*out_W;
	int out_sliceStep = out_H*out_widthStep;
	double ops = (double)9.0*C*H*W*nIters / (1024.0*1024.0*1024.0);
	float* in_data = (float*)_aligned_malloc(in_H*in_W*C * sizeof(float), 32);
	float* out_data1 = (float*)_aligned_malloc(out_H*out_W*C * sizeof(float), 32);
	float* out_data2 = (float*)_aligned_malloc(out_H*out_W*C * sizeof(float), 32);
	float* filter = (float*)_aligned_malloc(3 * 3 * C * sizeof(float), 32);
	float* g = (float*)_aligned_malloc(4 * 4 * C * sizeof(float), 32);
	for (int i = 0; i < in_H*in_W*C; i++)
		in_data[i] = rand() % 101 / 50.0 - 1.0;
	for (int i = 0; i < 9 * C; i++)
		filter[i] = rand() % 101 / 50.0 - 1.0;
	transform_filter_F2233(filter, C, g);

	double t1 = omp_get_wtime();
	for (int i = 0; i < nIters; i++)
		wino_F2233(in_data, in_H, in_W, C, g, out_data1, out_H, out_W, C);
	double t2 = omp_get_wtime();
	double time1 = t2 - t1;
	double gflops1 = ops /time1;
	printf("CxHxWxnIter = %d x %d x %d x %d, cost %.3f s, wino gflops = %.3f \n", C,H,W, nIters, time1, gflops1);
	for (int i = 0; i < nIters; i++)
	{
#if ZQ_CNN_USE_SSETYPE >= ZQ_CNN_SSETYPE_AVX
		if (C == 512)
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3_C512(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 256)
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3_C256(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 128)
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3_C128(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 64)
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3_C64(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 32)
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3_C32(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 24)
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3_C24(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 16)
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3_C16(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 8)
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3_C8(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else 
			zq_cnn_depthwise_conv_no_padding_32f_align256bit_kernel3x3(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
#else
		if (C == 256)
			zq_cnn_depthwise_conv_no_padding_32f_align128bit_kernel3x3_C256(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 128)
			zq_cnn_depthwise_conv_no_padding_32f_align128bit_kernel3x3_C128(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 64)
			zq_cnn_depthwise_conv_no_padding_32f_align128bit_kernel3x3_C64(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 32)
			zq_cnn_depthwise_conv_no_padding_32f_align128bit_kernel3x3_C32(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 24)
			zq_cnn_depthwise_conv_no_padding_32f_align128bit_kernel3x3_C24(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 16)
			zq_cnn_depthwise_conv_no_padding_32f_align128bit_kernel3x3_C16(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else if (C == 8)
			zq_cnn_depthwise_conv_no_padding_32f_align128bit_kernel3x3_C8(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
		else
			zq_cnn_depthwise_conv_no_padding_32f_align128bit_kernel3x3(in_data, 1, in_H, in_W, C, in_pixStep, in_widthStep, in_sliceStep, filter, 1, 3, 3, C, filter_pixStep, filter_widthStep, filter_sliceStep, 1, 1, out_data2, 1, out_H, out_W, C, out_pixStep, out_widthStep, out_sliceStep);
#endif
	}
	double t3 = omp_get_wtime();
	double time2 = t3 - t2;
	double gflops2 = ops / time2;
	printf("CxHxWxnIter = %d x %d x %d x %d, cost %.3f s, direct gflops = %.3f \n", C, H, W, nIters, time2, gflops2);
	bool chk = check_value(out_H*out_W, C, out_data1, C, out_data2, C, 1e-4, true);
	printf("check = %s\n",  chk? "True" : "False");
	_aligned_free(in_data);
	_aligned_free(out_data1);
	_aligned_free(out_data2);
	_aligned_free(filter);
	_aligned_free(g);
}

/*C % num_per_op == 0,
filter is 3x3*C,
trans_filter is 4*4*C
*/
void transform_filter_F2233(const float* filter, int C, float* trans_filter)
{
	float G[12] = {
		  1,   0,  0,
		0.5, 0.5,0.5,
		0.5,-0.5,0.5,
		  0,   0,  1
	};
	float Gt[12];
	float Gg[12];
	float GgGt[16];
	ZQ::ZQ_MathBase::MatrixTranspose(G, 4, 3, Gt);

	const float* g00 = filter;
	const float* g01 = filter + C;
	const float* g02 = filter + C * 2;
	const float* g10 = filter + C * 3;
	const float* g11 = filter + C * 4;
	const float* g12 = filter + C * 5;
	const float* g20 = filter + C * 6;
	const float* g21 = filter + C * 7;
	const float* g22 = filter + C * 8;
	float* T00 = trans_filter;
	float* T01 = trans_filter + C;
	float* T02 = trans_filter + C * 2;
	float* T03 = trans_filter + C * 3;
	float* T10 = trans_filter + C * 4;
	float* T11 = trans_filter + C * 5;
	float* T12 = trans_filter + C * 6;
	float* T13 = trans_filter + C * 7;
	float* T20 = trans_filter + C * 8;
	float* T21 = trans_filter + C * 9;
	float* T22 = trans_filter + C * 10;
	float* T23 = trans_filter + C * 11;
	float* T30 = trans_filter + C * 12;
	float* T31 = trans_filter + C * 13;
	float* T32 = trans_filter + C * 14;
	float* T33 = trans_filter + C * 15;

	for (int c = 0; c < C; c ++)
	{
		float g[9] = {
			*g00, *g01, *g02,
			*g10, *g11, *g12,
			*g20, *g21, *g22
		};
		ZQ::ZQ_MathBase::MatrixMul(G, g, 4, 3, 3, Gg);
		ZQ::ZQ_MathBase::MatrixMul(Gg, Gt, 4, 3, 4, GgGt);
		*T00 = GgGt[0];
		*T01 = GgGt[1];
		*T02 = GgGt[2];
		*T03 = GgGt[3];
		*T10 = GgGt[4];
		*T11 = GgGt[5];
		*T12 = GgGt[6];
		*T13 = GgGt[7];
		*T20 = GgGt[8];
		*T21 = GgGt[9];
		*T22 = GgGt[10];
		*T23 = GgGt[11];
		*T30 = GgGt[12];
		*T31 = GgGt[13];
		*T32 = GgGt[14];
		*T33 = GgGt[15];
		g00 ++;
		g01 ++;
		g02 ++;
		g10 ++;
		g11 ++;
		g12 ++;
		g20 ++;
		g21 ++;
		g22 ++;
		T00 ++;
		T01 ++;
		T02 ++;
		T03 ++;
		T10 ++;
		T11 ++;
		T12 ++;
		T13 ++;
		T20 ++;
		T21 ++;
		T22 ++;
		T23 ++;
		T30 ++;
		T31 ++;
		T32 ++;
		T33 ++;
	}
}

/*
out_H %2 == 0
out_W %2 == 0
in_C % num_per_op == 0
*/
void wino_F2233(const float* in_data, int in_H, int in_W, int in_C, const float* trans_filter,
	float* out_data, int out_H, int out_W, int out_C)
{
	int C = in_C;
	int C2 = C + C;
	int C3 = C2 + C;
	int C4 = C3 + C;
	int C5 = C4 + C;
	int C6 = C5 + C;
	int C7 = C6 + C;
	int C8 = C7 + C;
	int C9 = C8 + C;
	int C10 = C9 + C;
	int C11 = C10 + C;
	int C12 = C11 + C;
	int C13 = C12 + C;
	int C14 = C13 + C;
	int C15 = C14 + C;
	int in_widthStep = in_W*C;
	int in_widthStep2 = in_widthStep<<1;
	int in_widthStep3 = in_widthStep2+in_widthStep;
	int out_widthStep = out_W*C;
	int out_widthStep2 = out_widthStep << 1;
	const float* g00;
	const float* g01;
	const float* g02;
	const float* g03;
	const float* g10;
	const float* g11;
	const float* g12;
	const float* g13;
	const float* g20;
	const float* g21;
	const float* g22;
	const float* g23;
	const float* g30;
	const float* g31;
	const float* g32;
	const float* g33;
	const float* cur_row_ptr;
	const float* cur_pix_ptr;
	const float* d00;
	const float* d01;
	const float* d02;
	const float* d03;
	const float* d10;
	const float* d11;
	const float* d12;
	const float* d13;
	const float* d20;
	const float* d21;
	const float* d22;
	const float* d23;
	const float* d30;
	const float* d31;
	const float* d32;
	const float* d33;
	register zq_mm_type vg00, vg01, vg02, vg03;
	register zq_mm_type vg10, vg11, vg12, vg13;
	register zq_mm_type vg20, vg21, vg22, vg23;
	register zq_mm_type vg30, vg31, vg32, vg33;
	register zq_mm_type vd00, vd01, vd02, vd03;
	register zq_mm_type vd10, vd11, vd12, vd13;
	register zq_mm_type vd20, vd21, vd22, vd23;
	register zq_mm_type vd30, vd31, vd32, vd33;
	register zq_mm_type vBtd00, vBtd01, vBtd02, vBtd03;
	register zq_mm_type vBtd10, vBtd11, vBtd12, vBtd13;
	register zq_mm_type vBtd20, vBtd21, vBtd22, vBtd23;
	register zq_mm_type vBtd30, vBtd31, vBtd32, vBtd33;
	register zq_mm_type vBtdB00, vBtdB01, vBtdB02, vBtdB03;
	register zq_mm_type vBtdB10, vBtdB11, vBtdB12, vBtdB13;
	register zq_mm_type vBtdB20, vBtdB21, vBtdB22, vBtdB23;
	register zq_mm_type vBtdB30, vBtdB31, vBtdB32, vBtdB33;
	register zq_mm_type vAtd00, vAtd01, vAtd02, vAtd03;
	register zq_mm_type vAtd10, vAtd11, vAtd12, vAtd13;
	register zq_mm_type vAtdA00, vAtdA01;
	register zq_mm_type vAtdA10, vAtdA11;
	float* cur_out_row_ptr;
	float* cur_out_pix_ptr;
	float* T00;
	float* T01;
	float* T10;
	float* T11;

	if (C == num_per_op6)
	{
		cur_row_ptr = in_data;
		cur_out_row_ptr = out_data;
		for (int h = 0; h < out_H; h += 2, cur_row_ptr += in_widthStep2, cur_out_row_ptr += out_widthStep2)
		{
			cur_pix_ptr = cur_row_ptr;
			cur_out_pix_ptr = cur_out_row_ptr;
			for (int w = 0; w < out_W; w += 2, cur_pix_ptr += C2, cur_out_pix_ptr += C2)
			{
				g00 = trans_filter;
				g01 = trans_filter + C;
				g02 = trans_filter + C2;
				g03 = trans_filter + C3;
				g10 = trans_filter + C4;
				g11 = trans_filter + C5;
				g12 = trans_filter + C6;
				g13 = trans_filter + C7;
				g20 = trans_filter + C8;
				g21 = trans_filter + C9;
				g22 = trans_filter + C10;
				g23 = trans_filter + C11;
				g30 = trans_filter + C12;
				g31 = trans_filter + C13;
				g32 = trans_filter + C14;
				g33 = trans_filter + C15;
				d00 = cur_pix_ptr;
				d01 = d00 + C;
				d02 = d00 + C2;
				d03 = d00 + C3;
				d10 = cur_pix_ptr + in_widthStep;
				d11 = d10 + C;
				d12 = d10 + C2;
				d13 = d10 + C3;
				d20 = cur_pix_ptr + in_widthStep2;
				d21 = d20 + C;
				d22 = d20 + C2;
				d23 = d20 + C3;
				d30 = cur_pix_ptr + in_widthStep3;
				d31 = d30 + C;
				d32 = d30 + C2;
				d33 = d30 + C3;
				T00 = cur_out_pix_ptr;
				T01 = T00 + C;
				T10 = cur_out_pix_ptr + out_widthStep;
				T11 = T10 + C;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
			}
		}
	}
	else if (C == num_per_op4)
	{
		cur_row_ptr = in_data;
		cur_out_row_ptr = out_data;
		for (int h = 0; h < out_H; h += 2, cur_row_ptr += in_widthStep2, cur_out_row_ptr += out_widthStep2)
		{
			cur_pix_ptr = cur_row_ptr;
			cur_out_pix_ptr = cur_out_row_ptr;
			for (int w = 0; w < out_W; w += 2, cur_pix_ptr += C2, cur_out_pix_ptr += C2)
			{
				g00 = trans_filter;
				g01 = trans_filter + C;
				g02 = trans_filter + C2;
				g03 = trans_filter + C3;
				g10 = trans_filter + C4;
				g11 = trans_filter + C5;
				g12 = trans_filter + C6;
				g13 = trans_filter + C7;
				g20 = trans_filter + C8;
				g21 = trans_filter + C9;
				g22 = trans_filter + C10;
				g23 = trans_filter + C11;
				g30 = trans_filter + C12;
				g31 = trans_filter + C13;
				g32 = trans_filter + C14;
				g33 = trans_filter + C15;
				d00 = cur_pix_ptr;
				d01 = d00 + C;
				d02 = d00 + C2;
				d03 = d00 + C3;
				d10 = cur_pix_ptr + in_widthStep;
				d11 = d10 + C;
				d12 = d10 + C2;
				d13 = d10 + C3;
				d20 = cur_pix_ptr + in_widthStep2;
				d21 = d20 + C;
				d22 = d20 + C2;
				d23 = d20 + C3;
				d30 = cur_pix_ptr + in_widthStep3;
				d31 = d30 + C;
				d32 = d30 + C2;
				d33 = d30 + C3;
				T00 = cur_out_pix_ptr;
				T01 = T00 + C;
				T10 = cur_out_pix_ptr + out_widthStep;
				T11 = T10 + C;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
			}
		}
	}
	else if (C == num_per_op3)
	{
		cur_row_ptr = in_data;
		cur_out_row_ptr = out_data;
		for (int h = 0; h < out_H; h += 2, cur_row_ptr += in_widthStep2, cur_out_row_ptr += out_widthStep2)
		{
			cur_pix_ptr = cur_row_ptr;
			cur_out_pix_ptr = cur_out_row_ptr;
			for (int w = 0; w < out_W; w += 2, cur_pix_ptr += C2, cur_out_pix_ptr += C2)
			{
				g00 = trans_filter;
				g01 = trans_filter + C;
				g02 = trans_filter + C2;
				g03 = trans_filter + C3;
				g10 = trans_filter + C4;
				g11 = trans_filter + C5;
				g12 = trans_filter + C6;
				g13 = trans_filter + C7;
				g20 = trans_filter + C8;
				g21 = trans_filter + C9;
				g22 = trans_filter + C10;
				g23 = trans_filter + C11;
				g30 = trans_filter + C12;
				g31 = trans_filter + C13;
				g32 = trans_filter + C14;
				g33 = trans_filter + C15;
				d00 = cur_pix_ptr;
				d01 = d00 + C;
				d02 = d00 + C2;
				d03 = d00 + C3;
				d10 = cur_pix_ptr + in_widthStep;
				d11 = d10 + C;
				d12 = d10 + C2;
				d13 = d10 + C3;
				d20 = cur_pix_ptr + in_widthStep2;
				d21 = d20 + C;
				d22 = d20 + C2;
				d23 = d20 + C3;
				d30 = cur_pix_ptr + in_widthStep3;
				d31 = d30 + C;
				d32 = d30 + C2;
				d33 = d30 + C3;
				T00 = cur_out_pix_ptr;
				T01 = T00 + C;
				T10 = cur_out_pix_ptr + out_widthStep;
				T11 = T10 + C;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
			}
		}
	}
	else if (C == num_per_op2)
	{
		cur_row_ptr = in_data;
		cur_out_row_ptr = out_data;
		for (int h = 0; h < out_H; h += 2, cur_row_ptr += in_widthStep2, cur_out_row_ptr += out_widthStep2)
		{
			cur_pix_ptr = cur_row_ptr;
			cur_out_pix_ptr = cur_out_row_ptr;
			for (int w = 0; w < out_W; w += 2, cur_pix_ptr += C2, cur_out_pix_ptr += C2)
			{
				g00 = trans_filter;
				g01 = trans_filter + C;
				g02 = trans_filter + C2;
				g03 = trans_filter + C3;
				g10 = trans_filter + C4;
				g11 = trans_filter + C5;
				g12 = trans_filter + C6;
				g13 = trans_filter + C7;
				g20 = trans_filter + C8;
				g21 = trans_filter + C9;
				g22 = trans_filter + C10;
				g23 = trans_filter + C11;
				g30 = trans_filter + C12;
				g31 = trans_filter + C13;
				g32 = trans_filter + C14;
				g33 = trans_filter + C15;
				d00 = cur_pix_ptr;
				d01 = d00 + C;
				d02 = d00 + C2;
				d03 = d00 + C3;
				d10 = cur_pix_ptr + in_widthStep;
				d11 = d10 + C;
				d12 = d10 + C2;
				d13 = d10 + C3;
				d20 = cur_pix_ptr + in_widthStep2;
				d21 = d20 + C;
				d22 = d20 + C2;
				d23 = d20 + C3;
				d30 = cur_pix_ptr + in_widthStep3;
				d31 = d30 + C;
				d32 = d30 + C2;
				d33 = d30 + C3;
				T00 = cur_out_pix_ptr;
				T01 = T00 + C;
				T10 = cur_out_pix_ptr + out_widthStep;
				T11 = T10 + C;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);
				g00 += num_per_op;
				g01 += num_per_op;
				g02 += num_per_op;
				g03 += num_per_op;
				g10 += num_per_op;
				g11 += num_per_op;
				g12 += num_per_op;
				g13 += num_per_op;
				g20 += num_per_op;
				g21 += num_per_op;
				g22 += num_per_op;
				g23 += num_per_op;
				g30 += num_per_op;
				g31 += num_per_op;
				g32 += num_per_op;
				g33 += num_per_op;
				d00 += num_per_op;
				d01 += num_per_op;
				d02 += num_per_op;
				d03 += num_per_op;
				d10 += num_per_op;
				d11 += num_per_op;
				d12 += num_per_op;
				d13 += num_per_op;
				d20 += num_per_op;
				d21 += num_per_op;
				d22 += num_per_op;
				d23 += num_per_op;
				d30 += num_per_op;
				d31 += num_per_op;
				d32 += num_per_op;
				d33 += num_per_op;
				T00 += num_per_op;
				T01 += num_per_op;
				T10 += num_per_op;
				T11 += num_per_op;

				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);

			}
		}
	}
	else if (C == num_per_op)
	{
		cur_row_ptr = in_data;
		cur_out_row_ptr = out_data;
		for (int h = 0; h < out_H; h += 2, cur_row_ptr += in_widthStep2, cur_out_row_ptr += out_widthStep2)
		{
			cur_pix_ptr = cur_row_ptr;
			cur_out_pix_ptr = cur_out_row_ptr;
			for (int w = 0; w < out_W; w += 2, cur_pix_ptr += C2, cur_out_pix_ptr += C2)
			{
				g00 = trans_filter;
				g01 = trans_filter + C;
				g02 = trans_filter + C2;
				g03 = trans_filter + C3;
				g10 = trans_filter + C4;
				g11 = trans_filter + C5;
				g12 = trans_filter + C6;
				g13 = trans_filter + C7;
				g20 = trans_filter + C8;
				g21 = trans_filter + C9;
				g22 = trans_filter + C10;
				g23 = trans_filter + C11;
				g30 = trans_filter + C12;
				g31 = trans_filter + C13;
				g32 = trans_filter + C14;
				g33 = trans_filter + C15;
				d00 = cur_pix_ptr;
				d01 = d00 + C;
				d02 = d00 + C2;
				d03 = d00 + C3;
				d10 = cur_pix_ptr + in_widthStep;
				d11 = d10 + C;
				d12 = d10 + C2;
				d13 = d10 + C3;
				d20 = cur_pix_ptr + in_widthStep2;
				d21 = d20 + C;
				d22 = d20 + C2;
				d23 = d20 + C3;
				d30 = cur_pix_ptr + in_widthStep3;
				d31 = d30 + C;
				d32 = d30 + C2;
				d33 = d30 + C3;
				T00 = cur_out_pix_ptr;
				T01 = T00 + C;
				T10 = cur_out_pix_ptr + out_widthStep;
				T11 = T10 + C;
				vg00 = zq_mm_load_ps(g00);
				vg01 = zq_mm_load_ps(g01);
				vg02 = zq_mm_load_ps(g02);
				vg03 = zq_mm_load_ps(g03);
				vg10 = zq_mm_load_ps(g10);
				vg11 = zq_mm_load_ps(g11);
				vg12 = zq_mm_load_ps(g12);
				vg13 = zq_mm_load_ps(g13);
				vg20 = zq_mm_load_ps(g20);
				vg21 = zq_mm_load_ps(g21);
				vg22 = zq_mm_load_ps(g22);
				vg23 = zq_mm_load_ps(g23);
				vg30 = zq_mm_load_ps(g30);
				vg31 = zq_mm_load_ps(g31);
				vg32 = zq_mm_load_ps(g32);
				vg33 = zq_mm_load_ps(g33);
				vd00 = zq_mm_load_ps(d00);
				vd01 = zq_mm_load_ps(d01);
				vd02 = zq_mm_load_ps(d02);
				vd03 = zq_mm_load_ps(d03);
				vd10 = zq_mm_load_ps(d10);
				vd11 = zq_mm_load_ps(d11);
				vd12 = zq_mm_load_ps(d12);
				vd13 = zq_mm_load_ps(d13);
				vd20 = zq_mm_load_ps(d20);
				vd21 = zq_mm_load_ps(d21);
				vd22 = zq_mm_load_ps(d22);
				vd23 = zq_mm_load_ps(d23);
				vd30 = zq_mm_load_ps(d30);
				vd31 = zq_mm_load_ps(d31);
				vd32 = zq_mm_load_ps(d32);
				vd33 = zq_mm_load_ps(d33);
				vBtd00 = zq_mm_sub_ps(vd00, vd20);
				vBtd01 = zq_mm_sub_ps(vd01, vd21);
				vBtd02 = zq_mm_sub_ps(vd02, vd22);
				vBtd03 = zq_mm_sub_ps(vd03, vd23);
				vBtd10 = zq_mm_add_ps(vd10, vd20);
				vBtd11 = zq_mm_add_ps(vd11, vd21);
				vBtd12 = zq_mm_add_ps(vd12, vd22);
				vBtd13 = zq_mm_add_ps(vd13, vd23);
				vBtd20 = zq_mm_sub_ps(vd20, vd10);
				vBtd21 = zq_mm_sub_ps(vd21, vd11);
				vBtd22 = zq_mm_sub_ps(vd22, vd12);
				vBtd23 = zq_mm_sub_ps(vd23, vd13);
				vBtd30 = zq_mm_sub_ps(vd10, vd30);
				vBtd31 = zq_mm_sub_ps(vd11, vd31);
				vBtd32 = zq_mm_sub_ps(vd12, vd32);
				vBtd33 = zq_mm_sub_ps(vd13, vd33);
				vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
				vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
				vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
				vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
				vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
				vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
				vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
				vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
				vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
				vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
				vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
				vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
				vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
				vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
				vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
				vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
				vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
				vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
				vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
				vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
				vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
				vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
				vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
				vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
				vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
				vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
				vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
				vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
				vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
				vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
				vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
				vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
				vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
				vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
				vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
				vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
				vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
				vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
				vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
				vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
				vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
				vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
				vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
				vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
				vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
				vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
				vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
				vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
				vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
				vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
				vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
				vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
				vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
				vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
				vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
				vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
				zq_mm_store_ps(T00, vAtdA00);
				zq_mm_store_ps(T01, vAtdA01);
				zq_mm_store_ps(T10, vAtdA10);
				zq_mm_store_ps(T11, vAtdA11);

			}
		}
	}
	else if (C % num_per_op4 == 0)
	{
		cur_row_ptr = in_data;
		cur_out_row_ptr = out_data;
		for (int h = 0; h < out_H; h += 2, cur_row_ptr += in_widthStep2, cur_out_row_ptr += out_widthStep2)
		{
			cur_pix_ptr = cur_row_ptr;
			cur_out_pix_ptr = cur_out_row_ptr;
			for (int w = 0; w < out_W; w += 2, cur_pix_ptr += C2, cur_out_pix_ptr += C2)
			{
				g00 = trans_filter;
				g01 = trans_filter + C;
				g02 = trans_filter + C2;
				g03 = trans_filter + C3;
				g10 = trans_filter + C4;
				g11 = trans_filter + C5;
				g12 = trans_filter + C6;
				g13 = trans_filter + C7;
				g20 = trans_filter + C8;
				g21 = trans_filter + C9;
				g22 = trans_filter + C10;
				g23 = trans_filter + C11;
				g30 = trans_filter + C12;
				g31 = trans_filter + C13;
				g32 = trans_filter + C14;
				g33 = trans_filter + C15;
				d00 = cur_pix_ptr;
				d01 = d00 + C;
				d02 = d00 + C2;
				d03 = d00 + C3;
				d10 = cur_pix_ptr + in_widthStep;
				d11 = d10 + C;
				d12 = d10 + C2;
				d13 = d10 + C3;
				d20 = cur_pix_ptr + in_widthStep2;
				d21 = d20 + C;
				d22 = d20 + C2;
				d23 = d20 + C3;
				d30 = cur_pix_ptr + in_widthStep3;
				d31 = d30 + C;
				d32 = d30 + C2;
				d33 = d30 + C3;
				T00 = cur_out_pix_ptr;
				T01 = T00 + C;
				T10 = cur_out_pix_ptr + out_widthStep;
				T11 = T10 + C;
				for (int c = 0; c < in_C; c += num_per_op4)
				{
					vg00 = zq_mm_load_ps(g00);
					vg01 = zq_mm_load_ps(g01);
					vg02 = zq_mm_load_ps(g02);
					vg03 = zq_mm_load_ps(g03);
					vg10 = zq_mm_load_ps(g10);
					vg11 = zq_mm_load_ps(g11);
					vg12 = zq_mm_load_ps(g12);
					vg13 = zq_mm_load_ps(g13);
					vg20 = zq_mm_load_ps(g20);
					vg21 = zq_mm_load_ps(g21);
					vg22 = zq_mm_load_ps(g22);
					vg23 = zq_mm_load_ps(g23);
					vg30 = zq_mm_load_ps(g30);
					vg31 = zq_mm_load_ps(g31);
					vg32 = zq_mm_load_ps(g32);
					vg33 = zq_mm_load_ps(g33);
					vd00 = zq_mm_load_ps(d00);
					vd01 = zq_mm_load_ps(d01);
					vd02 = zq_mm_load_ps(d02);
					vd03 = zq_mm_load_ps(d03);
					vd10 = zq_mm_load_ps(d10);
					vd11 = zq_mm_load_ps(d11);
					vd12 = zq_mm_load_ps(d12);
					vd13 = zq_mm_load_ps(d13);
					vd20 = zq_mm_load_ps(d20);
					vd21 = zq_mm_load_ps(d21);
					vd22 = zq_mm_load_ps(d22);
					vd23 = zq_mm_load_ps(d23);
					vd30 = zq_mm_load_ps(d30);
					vd31 = zq_mm_load_ps(d31);
					vd32 = zq_mm_load_ps(d32);
					vd33 = zq_mm_load_ps(d33);
					vBtd00 = zq_mm_sub_ps(vd00, vd20);
					vBtd01 = zq_mm_sub_ps(vd01, vd21);
					vBtd02 = zq_mm_sub_ps(vd02, vd22);
					vBtd03 = zq_mm_sub_ps(vd03, vd23);
					vBtd10 = zq_mm_add_ps(vd10, vd20);
					vBtd11 = zq_mm_add_ps(vd11, vd21);
					vBtd12 = zq_mm_add_ps(vd12, vd22);
					vBtd13 = zq_mm_add_ps(vd13, vd23);
					vBtd20 = zq_mm_sub_ps(vd20, vd10);
					vBtd21 = zq_mm_sub_ps(vd21, vd11);
					vBtd22 = zq_mm_sub_ps(vd22, vd12);
					vBtd23 = zq_mm_sub_ps(vd23, vd13);
					vBtd30 = zq_mm_sub_ps(vd10, vd30);
					vBtd31 = zq_mm_sub_ps(vd11, vd31);
					vBtd32 = zq_mm_sub_ps(vd12, vd32);
					vBtd33 = zq_mm_sub_ps(vd13, vd33);
					vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
					vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
					vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
					vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
					vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
					vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
					vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
					vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
					vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
					vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
					vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
					vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
					vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
					vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
					vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
					vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
					vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
					vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
					vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
					vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
					vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
					vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
					vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
					vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
					vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
					vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
					vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
					vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
					vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
					vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
					vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
					vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
					vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
					vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
					vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
					vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
					vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
					vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
					vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
					vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
					vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
					vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
					vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
					vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
					vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
					vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
					vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
					vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
					vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
					vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
					vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
					vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
					vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
					vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
					vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
					vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
					zq_mm_store_ps(T00, vAtdA00);
					zq_mm_store_ps(T01, vAtdA01);
					zq_mm_store_ps(T10, vAtdA10);
					zq_mm_store_ps(T11, vAtdA11);
					g00 += num_per_op;
					g01 += num_per_op;
					g02 += num_per_op;
					g03 += num_per_op;
					g10 += num_per_op;
					g11 += num_per_op;
					g12 += num_per_op;
					g13 += num_per_op;
					g20 += num_per_op;
					g21 += num_per_op;
					g22 += num_per_op;
					g23 += num_per_op;
					g30 += num_per_op;
					g31 += num_per_op;
					g32 += num_per_op;
					g33 += num_per_op;
					d00 += num_per_op;
					d01 += num_per_op;
					d02 += num_per_op;
					d03 += num_per_op;
					d10 += num_per_op;
					d11 += num_per_op;
					d12 += num_per_op;
					d13 += num_per_op;
					d20 += num_per_op;
					d21 += num_per_op;
					d22 += num_per_op;
					d23 += num_per_op;
					d30 += num_per_op;
					d31 += num_per_op;
					d32 += num_per_op;
					d33 += num_per_op;
					T00 += num_per_op;
					T01 += num_per_op;
					T10 += num_per_op;
					T11 += num_per_op;
					vg00 = zq_mm_load_ps(g00);
					vg01 = zq_mm_load_ps(g01);
					vg02 = zq_mm_load_ps(g02);
					vg03 = zq_mm_load_ps(g03);
					vg10 = zq_mm_load_ps(g10);
					vg11 = zq_mm_load_ps(g11);
					vg12 = zq_mm_load_ps(g12);
					vg13 = zq_mm_load_ps(g13);
					vg20 = zq_mm_load_ps(g20);
					vg21 = zq_mm_load_ps(g21);
					vg22 = zq_mm_load_ps(g22);
					vg23 = zq_mm_load_ps(g23);
					vg30 = zq_mm_load_ps(g30);
					vg31 = zq_mm_load_ps(g31);
					vg32 = zq_mm_load_ps(g32);
					vg33 = zq_mm_load_ps(g33);
					vd00 = zq_mm_load_ps(d00);
					vd01 = zq_mm_load_ps(d01);
					vd02 = zq_mm_load_ps(d02);
					vd03 = zq_mm_load_ps(d03);
					vd10 = zq_mm_load_ps(d10);
					vd11 = zq_mm_load_ps(d11);
					vd12 = zq_mm_load_ps(d12);
					vd13 = zq_mm_load_ps(d13);
					vd20 = zq_mm_load_ps(d20);
					vd21 = zq_mm_load_ps(d21);
					vd22 = zq_mm_load_ps(d22);
					vd23 = zq_mm_load_ps(d23);
					vd30 = zq_mm_load_ps(d30);
					vd31 = zq_mm_load_ps(d31);
					vd32 = zq_mm_load_ps(d32);
					vd33 = zq_mm_load_ps(d33);
					vBtd00 = zq_mm_sub_ps(vd00, vd20);
					vBtd01 = zq_mm_sub_ps(vd01, vd21);
					vBtd02 = zq_mm_sub_ps(vd02, vd22);
					vBtd03 = zq_mm_sub_ps(vd03, vd23);
					vBtd10 = zq_mm_add_ps(vd10, vd20);
					vBtd11 = zq_mm_add_ps(vd11, vd21);
					vBtd12 = zq_mm_add_ps(vd12, vd22);
					vBtd13 = zq_mm_add_ps(vd13, vd23);
					vBtd20 = zq_mm_sub_ps(vd20, vd10);
					vBtd21 = zq_mm_sub_ps(vd21, vd11);
					vBtd22 = zq_mm_sub_ps(vd22, vd12);
					vBtd23 = zq_mm_sub_ps(vd23, vd13);
					vBtd30 = zq_mm_sub_ps(vd10, vd30);
					vBtd31 = zq_mm_sub_ps(vd11, vd31);
					vBtd32 = zq_mm_sub_ps(vd12, vd32);
					vBtd33 = zq_mm_sub_ps(vd13, vd33);
					vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
					vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
					vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
					vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
					vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
					vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
					vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
					vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
					vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
					vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
					vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
					vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
					vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
					vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
					vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
					vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
					vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
					vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
					vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
					vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
					vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
					vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
					vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
					vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
					vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
					vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
					vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
					vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
					vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
					vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
					vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
					vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
					vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
					vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
					vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
					vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
					vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
					vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
					vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
					vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
					vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
					vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
					vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
					vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
					vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
					vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
					vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
					vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
					vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
					vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
					vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
					vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
					vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
					vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
					vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
					vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
					zq_mm_store_ps(T00, vAtdA00);
					zq_mm_store_ps(T01, vAtdA01);
					zq_mm_store_ps(T10, vAtdA10);
					zq_mm_store_ps(T11, vAtdA11);
					g00 += num_per_op;
					g01 += num_per_op;
					g02 += num_per_op;
					g03 += num_per_op;
					g10 += num_per_op;
					g11 += num_per_op;
					g12 += num_per_op;
					g13 += num_per_op;
					g20 += num_per_op;
					g21 += num_per_op;
					g22 += num_per_op;
					g23 += num_per_op;
					g30 += num_per_op;
					g31 += num_per_op;
					g32 += num_per_op;
					g33 += num_per_op;
					d00 += num_per_op;
					d01 += num_per_op;
					d02 += num_per_op;
					d03 += num_per_op;
					d10 += num_per_op;
					d11 += num_per_op;
					d12 += num_per_op;
					d13 += num_per_op;
					d20 += num_per_op;
					d21 += num_per_op;
					d22 += num_per_op;
					d23 += num_per_op;
					d30 += num_per_op;
					d31 += num_per_op;
					d32 += num_per_op;
					d33 += num_per_op;
					T00 += num_per_op;
					T01 += num_per_op;
					T10 += num_per_op;
					T11 += num_per_op;
					vg00 = zq_mm_load_ps(g00);
					vg01 = zq_mm_load_ps(g01);
					vg02 = zq_mm_load_ps(g02);
					vg03 = zq_mm_load_ps(g03);
					vg10 = zq_mm_load_ps(g10);
					vg11 = zq_mm_load_ps(g11);
					vg12 = zq_mm_load_ps(g12);
					vg13 = zq_mm_load_ps(g13);
					vg20 = zq_mm_load_ps(g20);
					vg21 = zq_mm_load_ps(g21);
					vg22 = zq_mm_load_ps(g22);
					vg23 = zq_mm_load_ps(g23);
					vg30 = zq_mm_load_ps(g30);
					vg31 = zq_mm_load_ps(g31);
					vg32 = zq_mm_load_ps(g32);
					vg33 = zq_mm_load_ps(g33);
					vd00 = zq_mm_load_ps(d00);
					vd01 = zq_mm_load_ps(d01);
					vd02 = zq_mm_load_ps(d02);
					vd03 = zq_mm_load_ps(d03);
					vd10 = zq_mm_load_ps(d10);
					vd11 = zq_mm_load_ps(d11);
					vd12 = zq_mm_load_ps(d12);
					vd13 = zq_mm_load_ps(d13);
					vd20 = zq_mm_load_ps(d20);
					vd21 = zq_mm_load_ps(d21);
					vd22 = zq_mm_load_ps(d22);
					vd23 = zq_mm_load_ps(d23);
					vd30 = zq_mm_load_ps(d30);
					vd31 = zq_mm_load_ps(d31);
					vd32 = zq_mm_load_ps(d32);
					vd33 = zq_mm_load_ps(d33);
					vBtd00 = zq_mm_sub_ps(vd00, vd20);
					vBtd01 = zq_mm_sub_ps(vd01, vd21);
					vBtd02 = zq_mm_sub_ps(vd02, vd22);
					vBtd03 = zq_mm_sub_ps(vd03, vd23);
					vBtd10 = zq_mm_add_ps(vd10, vd20);
					vBtd11 = zq_mm_add_ps(vd11, vd21);
					vBtd12 = zq_mm_add_ps(vd12, vd22);
					vBtd13 = zq_mm_add_ps(vd13, vd23);
					vBtd20 = zq_mm_sub_ps(vd20, vd10);
					vBtd21 = zq_mm_sub_ps(vd21, vd11);
					vBtd22 = zq_mm_sub_ps(vd22, vd12);
					vBtd23 = zq_mm_sub_ps(vd23, vd13);
					vBtd30 = zq_mm_sub_ps(vd10, vd30);
					vBtd31 = zq_mm_sub_ps(vd11, vd31);
					vBtd32 = zq_mm_sub_ps(vd12, vd32);
					vBtd33 = zq_mm_sub_ps(vd13, vd33);
					vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
					vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
					vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
					vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
					vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
					vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
					vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
					vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
					vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
					vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
					vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
					vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
					vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
					vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
					vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
					vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
					vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
					vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
					vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
					vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
					vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
					vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
					vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
					vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
					vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
					vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
					vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
					vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
					vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
					vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
					vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
					vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
					vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
					vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
					vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
					vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
					vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
					vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
					vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
					vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
					vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
					vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
					vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
					vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
					vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
					vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
					vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
					vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
					vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
					vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
					vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
					vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
					vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
					vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
					vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
					vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
					zq_mm_store_ps(T00, vAtdA00);
					zq_mm_store_ps(T01, vAtdA01);
					zq_mm_store_ps(T10, vAtdA10);
					zq_mm_store_ps(T11, vAtdA11);
					g00 += num_per_op;
					g01 += num_per_op;
					g02 += num_per_op;
					g03 += num_per_op;
					g10 += num_per_op;
					g11 += num_per_op;
					g12 += num_per_op;
					g13 += num_per_op;
					g20 += num_per_op;
					g21 += num_per_op;
					g22 += num_per_op;
					g23 += num_per_op;
					g30 += num_per_op;
					g31 += num_per_op;
					g32 += num_per_op;
					g33 += num_per_op;
					d00 += num_per_op;
					d01 += num_per_op;
					d02 += num_per_op;
					d03 += num_per_op;
					d10 += num_per_op;
					d11 += num_per_op;
					d12 += num_per_op;
					d13 += num_per_op;
					d20 += num_per_op;
					d21 += num_per_op;
					d22 += num_per_op;
					d23 += num_per_op;
					d30 += num_per_op;
					d31 += num_per_op;
					d32 += num_per_op;
					d33 += num_per_op;
					T00 += num_per_op;
					T01 += num_per_op;
					T10 += num_per_op;
					T11 += num_per_op;
					vg00 = zq_mm_load_ps(g00);
					vg01 = zq_mm_load_ps(g01);
					vg02 = zq_mm_load_ps(g02);
					vg03 = zq_mm_load_ps(g03);
					vg10 = zq_mm_load_ps(g10);
					vg11 = zq_mm_load_ps(g11);
					vg12 = zq_mm_load_ps(g12);
					vg13 = zq_mm_load_ps(g13);
					vg20 = zq_mm_load_ps(g20);
					vg21 = zq_mm_load_ps(g21);
					vg22 = zq_mm_load_ps(g22);
					vg23 = zq_mm_load_ps(g23);
					vg30 = zq_mm_load_ps(g30);
					vg31 = zq_mm_load_ps(g31);
					vg32 = zq_mm_load_ps(g32);
					vg33 = zq_mm_load_ps(g33);
					vd00 = zq_mm_load_ps(d00);
					vd01 = zq_mm_load_ps(d01);
					vd02 = zq_mm_load_ps(d02);
					vd03 = zq_mm_load_ps(d03);
					vd10 = zq_mm_load_ps(d10);
					vd11 = zq_mm_load_ps(d11);
					vd12 = zq_mm_load_ps(d12);
					vd13 = zq_mm_load_ps(d13);
					vd20 = zq_mm_load_ps(d20);
					vd21 = zq_mm_load_ps(d21);
					vd22 = zq_mm_load_ps(d22);
					vd23 = zq_mm_load_ps(d23);
					vd30 = zq_mm_load_ps(d30);
					vd31 = zq_mm_load_ps(d31);
					vd32 = zq_mm_load_ps(d32);
					vd33 = zq_mm_load_ps(d33);
					vBtd00 = zq_mm_sub_ps(vd00, vd20);
					vBtd01 = zq_mm_sub_ps(vd01, vd21);
					vBtd02 = zq_mm_sub_ps(vd02, vd22);
					vBtd03 = zq_mm_sub_ps(vd03, vd23);
					vBtd10 = zq_mm_add_ps(vd10, vd20);
					vBtd11 = zq_mm_add_ps(vd11, vd21);
					vBtd12 = zq_mm_add_ps(vd12, vd22);
					vBtd13 = zq_mm_add_ps(vd13, vd23);
					vBtd20 = zq_mm_sub_ps(vd20, vd10);
					vBtd21 = zq_mm_sub_ps(vd21, vd11);
					vBtd22 = zq_mm_sub_ps(vd22, vd12);
					vBtd23 = zq_mm_sub_ps(vd23, vd13);
					vBtd30 = zq_mm_sub_ps(vd10, vd30);
					vBtd31 = zq_mm_sub_ps(vd11, vd31);
					vBtd32 = zq_mm_sub_ps(vd12, vd32);
					vBtd33 = zq_mm_sub_ps(vd13, vd33);
					vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
					vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
					vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
					vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
					vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
					vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
					vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
					vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
					vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
					vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
					vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
					vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
					vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
					vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
					vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
					vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
					vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
					vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
					vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
					vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
					vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
					vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
					vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
					vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
					vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
					vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
					vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
					vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
					vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
					vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
					vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
					vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
					vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
					vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
					vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
					vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
					vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
					vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
					vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
					vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
					vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
					vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
					vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
					vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
					vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
					vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
					vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
					vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
					vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
					vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
					vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
					vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
					vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
					vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
					vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
					vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
					zq_mm_store_ps(T00, vAtdA00);
					zq_mm_store_ps(T01, vAtdA01);
					zq_mm_store_ps(T10, vAtdA10);
					zq_mm_store_ps(T11, vAtdA11);
					g00 += num_per_op;
					g01 += num_per_op;
					g02 += num_per_op;
					g03 += num_per_op;
					g10 += num_per_op;
					g11 += num_per_op;
					g12 += num_per_op;
					g13 += num_per_op;
					g20 += num_per_op;
					g21 += num_per_op;
					g22 += num_per_op;
					g23 += num_per_op;
					g30 += num_per_op;
					g31 += num_per_op;
					g32 += num_per_op;
					g33 += num_per_op;
					d00 += num_per_op;
					d01 += num_per_op;
					d02 += num_per_op;
					d03 += num_per_op;
					d10 += num_per_op;
					d11 += num_per_op;
					d12 += num_per_op;
					d13 += num_per_op;
					d20 += num_per_op;
					d21 += num_per_op;
					d22 += num_per_op;
					d23 += num_per_op;
					d30 += num_per_op;
					d31 += num_per_op;
					d32 += num_per_op;
					d33 += num_per_op;
					T00 += num_per_op;
					T01 += num_per_op;
					T10 += num_per_op;
					T11 += num_per_op;
				}
			}
		}
	}
	else
	{
		cur_row_ptr = in_data;
		cur_out_row_ptr = out_data;
		for (int h = 0; h < out_H; h += 2, cur_row_ptr += in_widthStep2, cur_out_row_ptr += out_widthStep2)
		{
			cur_pix_ptr = cur_row_ptr;
			cur_out_pix_ptr = cur_out_row_ptr;
			for (int w = 0; w < out_W; w += 2, cur_pix_ptr += C2, cur_out_pix_ptr += C2)
			{
				g00 = trans_filter;
				g01 = trans_filter + C;
				g02 = trans_filter + C2;
				g03 = trans_filter + C3;
				g10 = trans_filter + C4;
				g11 = trans_filter + C5;
				g12 = trans_filter + C6;
				g13 = trans_filter + C7;
				g20 = trans_filter + C8;
				g21 = trans_filter + C9;
				g22 = trans_filter + C10;
				g23 = trans_filter + C11;
				g30 = trans_filter + C12;
				g31 = trans_filter + C13;
				g32 = trans_filter + C14;
				g33 = trans_filter + C15;
				d00 = cur_pix_ptr;
				d01 = d00 + C;
				d02 = d00 + C2;
				d03 = d00 + C3;
				d10 = cur_pix_ptr + in_widthStep;
				d11 = d10 + C;
				d12 = d10 + C2;
				d13 = d10 + C3;
				d20 = cur_pix_ptr + in_widthStep2;
				d21 = d20 + C;
				d22 = d20 + C2;
				d23 = d20 + C3;
				d30 = cur_pix_ptr + in_widthStep3;
				d31 = d30 + C;
				d32 = d30 + C2;
				d33 = d30 + C3;
				T00 = cur_out_pix_ptr;
				T01 = T00 + C;
				T10 = cur_out_pix_ptr + out_widthStep;
				T11 = T10 + C;
				for (int c = 0; c < in_C; c += num_per_op)
				{
					vg00 = zq_mm_load_ps(g00);
					vg01 = zq_mm_load_ps(g01);
					vg02 = zq_mm_load_ps(g02);
					vg03 = zq_mm_load_ps(g03);
					vg10 = zq_mm_load_ps(g10);
					vg11 = zq_mm_load_ps(g11);
					vg12 = zq_mm_load_ps(g12);
					vg13 = zq_mm_load_ps(g13);
					vg20 = zq_mm_load_ps(g20);
					vg21 = zq_mm_load_ps(g21);
					vg22 = zq_mm_load_ps(g22);
					vg23 = zq_mm_load_ps(g23);
					vg30 = zq_mm_load_ps(g30);
					vg31 = zq_mm_load_ps(g31);
					vg32 = zq_mm_load_ps(g32);
					vg33 = zq_mm_load_ps(g33);
					vd00 = zq_mm_load_ps(d00);
					vd01 = zq_mm_load_ps(d01);
					vd02 = zq_mm_load_ps(d02);
					vd03 = zq_mm_load_ps(d03);
					vd10 = zq_mm_load_ps(d10);
					vd11 = zq_mm_load_ps(d11);
					vd12 = zq_mm_load_ps(d12);
					vd13 = zq_mm_load_ps(d13);
					vd20 = zq_mm_load_ps(d20);
					vd21 = zq_mm_load_ps(d21);
					vd22 = zq_mm_load_ps(d22);
					vd23 = zq_mm_load_ps(d23);
					vd30 = zq_mm_load_ps(d30);
					vd31 = zq_mm_load_ps(d31);
					vd32 = zq_mm_load_ps(d32);
					vd33 = zq_mm_load_ps(d33);
					vBtd00 = zq_mm_sub_ps(vd00, vd20);
					vBtd01 = zq_mm_sub_ps(vd01, vd21);
					vBtd02 = zq_mm_sub_ps(vd02, vd22);
					vBtd03 = zq_mm_sub_ps(vd03, vd23);
					vBtd10 = zq_mm_add_ps(vd10, vd20);
					vBtd11 = zq_mm_add_ps(vd11, vd21);
					vBtd12 = zq_mm_add_ps(vd12, vd22);
					vBtd13 = zq_mm_add_ps(vd13, vd23);
					vBtd20 = zq_mm_sub_ps(vd20, vd10);
					vBtd21 = zq_mm_sub_ps(vd21, vd11);
					vBtd22 = zq_mm_sub_ps(vd22, vd12);
					vBtd23 = zq_mm_sub_ps(vd23, vd13);
					vBtd30 = zq_mm_sub_ps(vd10, vd30);
					vBtd31 = zq_mm_sub_ps(vd11, vd31);
					vBtd32 = zq_mm_sub_ps(vd12, vd32);
					vBtd33 = zq_mm_sub_ps(vd13, vd33);
					vBtdB00 = zq_mm_sub_ps(vBtd00, vBtd02);
					vBtdB10 = zq_mm_sub_ps(vBtd10, vBtd12);
					vBtdB20 = zq_mm_sub_ps(vBtd20, vBtd22);
					vBtdB30 = zq_mm_sub_ps(vBtd30, vBtd32);
					vBtdB01 = zq_mm_add_ps(vBtd01, vBtd02);
					vBtdB11 = zq_mm_add_ps(vBtd11, vBtd12);
					vBtdB21 = zq_mm_add_ps(vBtd21, vBtd22);
					vBtdB31 = zq_mm_add_ps(vBtd31, vBtd32);
					vBtdB02 = zq_mm_sub_ps(vBtd02, vBtd01);
					vBtdB12 = zq_mm_sub_ps(vBtd12, vBtd11);
					vBtdB22 = zq_mm_sub_ps(vBtd22, vBtd21);
					vBtdB32 = zq_mm_sub_ps(vBtd32, vBtd31);
					vBtdB03 = zq_mm_sub_ps(vBtd01, vBtd03);
					vBtdB13 = zq_mm_sub_ps(vBtd11, vBtd13);
					vBtdB23 = zq_mm_sub_ps(vBtd21, vBtd23);
					vBtdB33 = zq_mm_sub_ps(vBtd31, vBtd33);
					vBtdB00 = zq_mm_mul_ps(vBtdB00, vg00);
					vBtdB01 = zq_mm_mul_ps(vBtdB01, vg01);
					vBtdB02 = zq_mm_mul_ps(vBtdB02, vg02);
					vBtdB03 = zq_mm_mul_ps(vBtdB03, vg03);
					vBtdB10 = zq_mm_mul_ps(vBtdB10, vg10);
					vBtdB11 = zq_mm_mul_ps(vBtdB11, vg11);
					vBtdB12 = zq_mm_mul_ps(vBtdB12, vg12);
					vBtdB13 = zq_mm_mul_ps(vBtdB13, vg13);
					vBtdB20 = zq_mm_mul_ps(vBtdB20, vg20);
					vBtdB21 = zq_mm_mul_ps(vBtdB21, vg21);
					vBtdB22 = zq_mm_mul_ps(vBtdB22, vg22);
					vBtdB23 = zq_mm_mul_ps(vBtdB23, vg23);
					vBtdB30 = zq_mm_mul_ps(vBtdB30, vg30);
					vBtdB31 = zq_mm_mul_ps(vBtdB31, vg31);
					vBtdB32 = zq_mm_mul_ps(vBtdB32, vg32);
					vBtdB33 = zq_mm_mul_ps(vBtdB33, vg33);
					vAtd00 = zq_mm_add_ps(vBtdB00, vBtdB10);
					vAtd01 = zq_mm_add_ps(vBtdB01, vBtdB11);
					vAtd02 = zq_mm_add_ps(vBtdB02, vBtdB12);
					vAtd03 = zq_mm_add_ps(vBtdB03, vBtdB13);
					vAtd10 = zq_mm_sub_ps(vBtdB10, vBtdB20);
					vAtd11 = zq_mm_sub_ps(vBtdB11, vBtdB21);
					vAtd12 = zq_mm_sub_ps(vBtdB12, vBtdB22);
					vAtd13 = zq_mm_sub_ps(vBtdB13, vBtdB23);
					vAtd00 = zq_mm_add_ps(vAtd00, vBtdB20);
					vAtd01 = zq_mm_add_ps(vAtd01, vBtdB21);
					vAtd02 = zq_mm_add_ps(vAtd02, vBtdB22);
					vAtd03 = zq_mm_add_ps(vAtd03, vBtdB23);
					vAtd10 = zq_mm_sub_ps(vAtd10, vBtdB30);
					vAtd11 = zq_mm_sub_ps(vAtd11, vBtdB31);
					vAtd12 = zq_mm_sub_ps(vAtd12, vBtdB32);
					vAtd13 = zq_mm_sub_ps(vAtd13, vBtdB33);
					vAtdA00 = zq_mm_add_ps(vAtd00, vAtd01);
					vAtdA10 = zq_mm_add_ps(vAtd10, vAtd11);
					vAtdA01 = zq_mm_sub_ps(vAtd01, vAtd02);
					vAtdA11 = zq_mm_sub_ps(vAtd11, vAtd12);
					vAtdA00 = zq_mm_add_ps(vAtdA00, vAtd02);
					vAtdA10 = zq_mm_add_ps(vAtdA10, vAtd12);
					vAtdA01 = zq_mm_sub_ps(vAtdA01, vAtd03);
					vAtdA11 = zq_mm_sub_ps(vAtdA11, vAtd13);
					zq_mm_store_ps(T00, vAtdA00);
					zq_mm_store_ps(T01, vAtdA01);
					zq_mm_store_ps(T10, vAtdA10);
					zq_mm_store_ps(T11, vAtdA11);
					g00 += num_per_op;
					g01 += num_per_op;
					g02 += num_per_op;
					g03 += num_per_op;
					g10 += num_per_op;
					g11 += num_per_op;
					g12 += num_per_op;
					g13 += num_per_op;
					g20 += num_per_op;
					g21 += num_per_op;
					g22 += num_per_op;
					g23 += num_per_op;
					g30 += num_per_op;
					g31 += num_per_op;
					g32 += num_per_op;
					g33 += num_per_op;
					d00 += num_per_op;
					d01 += num_per_op;
					d02 += num_per_op;
					d03 += num_per_op;
					d10 += num_per_op;
					d11 += num_per_op;
					d12 += num_per_op;
					d13 += num_per_op;
					d20 += num_per_op;
					d21 += num_per_op;
					d22 += num_per_op;
					d23 += num_per_op;
					d30 += num_per_op;
					d31 += num_per_op;
					d32 += num_per_op;
					d33 += num_per_op;
					T00 += num_per_op;
					T01 += num_per_op;
					T10 += num_per_op;
					T11 += num_per_op;
				}
			}
		}
	}
}

bool check_value(int M, int N, const float* C1, int ldc1, const float* C2, int ldc2, float thresh, bool show)
{
	int m, n;
	const float* Cptr1, *Cptr2, *C_c_ptr1, *C_c_ptr2;
	float v1, v2;
	bool ret = true;
	for (m = 0, Cptr1 = C1, Cptr2 = C2; m < M; m++, Cptr1 += ldc1, Cptr2 += ldc2)
	{
		C_c_ptr1 = Cptr1;
		C_c_ptr2 = Cptr2;
		for (n = 0; n < N; n++)
		{
			v1 = *C_c_ptr1;
			v2 = *C_c_ptr2;
			float scale = __max(fabs(v1), fabs(v2));
			float real_thresh = __max(thresh, thresh*scale);
			if (fabs(v1 - v2) > real_thresh)
			{
				if (show)
					printf("%d,%d = %f %f\n", m, n, v1, v2);
				ret = false;
			}
			C_c_ptr1++;
			C_c_ptr2++;
		}
	}
	return ret;
}