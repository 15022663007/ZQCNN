
include_directories(${ZQCNN_INCLUDE_DIRS})
link_directories(${ZQCNN_LIBRARY_DIR})

if((CMAKE_CXX_COMPILER_ID MATCHES "GNU") OR (CMAKE_CXX_COMPILER_ID MATCHES "Clang"))
    #add_definitions(-Wall -Wextra -Wno-unused-function)
    add_definitions(-fPIC)
    if(CMAKE_BUILD_TYPE MATCHES "(Release|RELEASE|release)")
        add_definitions(-Ofast)
        add_definitions(-ffast-math)
    endif()
    if(SIMD_ARCH_TYPE MATCHES "(arm|arm64|arm64-fp16)")
        add_definitions(-DZQ_CNN_USE_ARM_NEON)
        if(SIMD_ARCH_TYPE MATCHES "arm64|arm64-fp16")
            add_definitions(-march=armv8-a)
            add_definitions(-DZQ_CNN_USE_ARM_NEON_ARMV8)
            add_definitions(-DZQ_CNN_USE_FMADD128)
            if(SIMD_ARCH_TYPE MATCHES "arm64-fp16")
                add_definitions(-DZQ_CNN_USE_ARM_NEON_FP16)
                add_definitions(-mfpu=neon-fp-armv8)
            endif()
        else()
            add_definitions(-march=native)
            add_definitions(-mfpu=neon)
            add_definitions(-mfloat-abi=hard)
        endif()
		if(BLAS_TYPE MATCHES "zq_gemm")
            add_definitions(-DZQ_CNN_USE_ZQ_GEMM=1)
        elseif(BLAS_TYPE MATCHES "openblas")
            add_definitions(-DZQ_CNN_USE_BLAS_GEMM=1)
        elseif(BLAS_TYPE MATCHES "openblas_zq_gemm")
            add_definitions(-DZQ_CNN_USE_BOTH_BLAS_ZQ_GEMM)
        endif()
    else()
	    add_compile_options(-mavx2)
	endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "Intel")
		add_compile_options(/QxAVX2)
elseif(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
		add_compile_options(/arch:AVX2)
endif()

file(GLOB ZQCNN_SRC ${CMAKE_CURRENT_LIST_DIR}/*.cpp
                    ${CMAKE_CURRENT_LIST_DIR}/math/*.c
                    ${CMAKE_CURRENT_LIST_DIR}/layers_c/*.c)

add_library(ZQCNN ${ZQCNN_SRC})

find_package(OpenMP)
# For CMake < 3.9, we need to make the target ourselves
if(NOT TARGET OpenMP::OpenMP_CXX)
    find_package(Threads REQUIRED)
    add_library(OpenMP::OpenMP_CXX IMPORTED INTERFACE)
    set_property(TARGET OpenMP::OpenMP_CXX
            PROPERTY INTERFACE_COMPILE_OPTIONS ${OpenMP_CXX_FLAGS})
    # Only works if the same flag is passed to the linker; use CMake 3.9+ otherwise (Intel, AppleClang)
    set_property(TARGET OpenMP::OpenMP_CXX
            PROPERTY INTERFACE_LINK_LIBRARIES ${OpenMP_CXX_FLAGS} Threads::Threads)
endif()

if(WIN32)
    target_link_libraries(ZQCNN ZQ_GEMM mklml)
elseif(UNIX)
    target_link_libraries(ZQCNN ZQ_GEMM gomp)
endif()
